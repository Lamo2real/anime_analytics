
name: Deploy Infrastructure & Extraction Script

on:
    pull_request:
        branches: 
            - prod


jobs:
  docker-image-to-ecr:
    runs-on: ubuntu-24.04
  
    defaults:
        run:
            working-directory: application
  
    steps:
        - name: clone repo into ubuntu machine
          uses: actions/checkout@v4
  
        - name: configure aws credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            aws-access-key-id: ${{secrets.DEVELOPER_ACCESS_KEY}}
            aws-secret-access-key: ${{secrets.DEVELOPER_SECRET_ACCESS_KEY}}
            aws-region: ${{secrets.INFRASTRCUTURE_REGION}}
          
        - name: login to amazon ECR
          run:  aws ecr get-login-password --region ${{secrets.INFRASTRCUTURE_REGION}} | docker login --username AWS --password-stdin ${{secrets.DEVELOPER_ACCOUNT_ID}}.dkr.ecr.${{secrets.INFRASTRCUTURE_REGION}}.amazonaws.com
  
        - name: cleaning/deleting existing docker image in ecr if exists
          run: |
            aws ecr batch-delete-image \
              --repository-name ${{secrets.ECR_REPO_NAME}} \
              --image-ids imageTag=v1 \
              --region ${{secrets.INFRASTRCUTURE_REGION}} \
              --no-cli-pager || true

        - name: set image URI to a github env variable
          run: echo "ECR_IMAGE_URI=${{secrets.DEVELOPER_ACCOUNT_ID}}.dkr.ecr.${{secrets.INFRASTRCUTURE_REGION}}.amazonaws.com/${{secrets.ECR_REPO_NAME}}:v1" > $GITHUB_ENV
  
        - name: build docker image compatible with ECR image URI
          run: docker build --no-cache -t $ECR_IMAGE_URI .
  
        - name: push docker image to ECR repository
          run: docker push $ECR_IMAGE_URI
  
        - name: delete local docker image
          run: docker rmi -f $ECR_IMAGE_URI

          
  deploy-infrastructure:
      runs-on: ubuntu-24.04
      needs: docker-image-to-ecr

      defaults:
          run:
              working-directory: infrastructure/data_collection_infra

      steps:
          - name: clone repo into ubuntu machine
            uses: actions/checkout@v4

          - name: configure aws credentials
            uses: aws-actions/configure-aws-credentials@v3 #stores it in a temporary manner
            with:
              aws-access-key-id: ${{secrets.DEVELOPER_ACCESS_KEY}}
              aws-secret-access-key: ${{secrets.DEVELOPER_SECRET_ACCESS_KEY}}
              aws-region: ${{secrets.INFRASTRCUTURE_REGION}}

          - name: setup terraform
            uses: hashicorp/setup-terraform@v3
            with:
              terraform_version: 1.9.5
          
          - name: initialize terraform 
            run: terraform init

          - name: check the syntax of the terraform code
            run: terraform validate

          - name: infrastructure setup logic (plan)
            run: |
              terraform plan \
                -var="anime_etl_region=${{secrets.INFRASTRCUTURE_REGION}}" \
                -var="lambda_infra_name=${{secrets.LAMBDA_NAME}}" \
                -var="s3_data_lake_name=${{secrets.S3_DATA_LAKE}}" \
                -var="s3_path_to_processed_data_file=${{secrets.S3_KEY_PATH_TO_FILE}}" \
                -var="current_developer_name=${{secrets.DEVELOPER_NAME}}" \
                -var="ecr_repository=${{secrets.ECR_REPO_NAME}}" \
                -var="docker_image_uri=${{secrets.DEVELOPER_ACCOUNT_ID}}.dkr.ecr.${{secrets.INFRASTRCUTURE_REGION}}.amazonaws.com/${{secrets.ECR_REPO_NAME}}:latest"

          - name: deploy the infra configuration
            run: |
              terraform apply --auto-approve \
                -var="anime_etl_region=${{secrets.INFRASTRCUTURE_REGION}}" \
                -var="lambda_infra_name=${{secrets.LAMBDA_NAME}}" \
                -var="s3_data_lake_name=${{secrets.S3_DATA_LAKE}}" \
                -var="s3_path_to_processed_data_file=${{secrets.S3_KEY_PATH_TO_FILE}}" \
                -var="current_developer_name=${{secrets.DEVELOPER_NAME}}" \
                -var="ecr_repository=${{secrets.ECR_REPO_NAME}}" \
                -var="docker_image_uri=${{secrets.DEVELOPER_ACCOUNT_ID}}.dkr.ecr.${{secrets.INFRASTRCUTURE_REGION}}.amazonaws.com/${{secrets.ECR_REPO_NAME}}:latest"


